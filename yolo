<!DOCTYPE html>
<html>
<head>
  <title>2D Shooter Game</title>
  <style>
    canvas {
      display: block;
      margin: 0 auto;
      background: #000;
    }
    body {
      text-align: center;
      color: white;
      font-family: Arial, sans-serif;
    }
  </style>
</head>
<body>
  <h1>2D Shooter Game</h1>
  <p>Use arrow keys to move and spacebar to shoot!</p>
  <canvas id="gameCanvas" width="800" height="600"></canvas>
  <script>
    const canvas = document.getElementById('gameCanvas');
    const ctx = canvas.getContext('2d');

    // Game variables
    const player = { x: 400, y: 550, width: 50, height: 50, speed: 5 };
    const bullets = [];
    const enemies = [];
    let score = 0;
    let gameOver = false;

    // Draw player
    function drawPlayer() {
      ctx.fillStyle = 'white';
      ctx.fillRect(player.x, player.y, player.width, player.height);
    }

    // Draw bullets
    function drawBullets() {
      ctx.fillStyle = 'red';
      bullets.forEach((bullet, index) => {
        bullet.y -= bullet.speed;
        ctx.fillRect(bullet.x, bullet.y, bullet.width, bullet.height);

        // Remove bullets that go off-screen
        if (bullet.y < 0) {
          bullets.splice(index, 1);
        }
      });
    }

    // Draw enemies
    function drawEnemies() {
      ctx.fillStyle = 'green';
      enemies.forEach((enemy, index) => {
        enemy.y += enemy.speed;
        ctx.fillRect(enemy.x, enemy.y, enemy.width, enemy.height);

        // Check for collision with player
        if (
          enemy.x < player.x + player.width &&
          enemy.x + enemy.width > player.x &&
          enemy.y < player.y + player.height &&
          enemy.y + enemy.height > player.y
        ) {
          gameOver = true;
        }

        // Remove enemies that go off-screen
        if (enemy.y > canvas.height) {
          enemies.splice(index, 1);
        }
      });
    }

    // Spawn enemies
    function spawnEnemy() {
      const x = Math.random() * (canvas.width - 50);
      enemies.push({ x, y: 0, width: 50, height: 50, speed: 2 });
    }

    // Check for collisions between bullets and enemies
    function checkCollisions() {
      bullets.forEach((bullet, bIndex) => {
        enemies.forEach((enemy, eIndex) => {
          if (
            bullet.x < enemy.x + enemy.width &&
            bullet.x + bullet.width > enemy.x &&
            bullet.y < enemy.y + enemy.height &&
            bullet.y + bullet.height > enemy.y
          ) {
            // Remove bullet and enemy
            bullets.splice(bIndex, 1);
            enemies.splice(eIndex, 1);
            score++;
          }
        });
      });
    }

    // Handle player movement
    function handleInput() {
      if (keys['ArrowLeft'] && player.x > 0) {
        player.x -= player.speed;
      }
      if (keys['ArrowRight'] && player.x < canvas.width - player.width) {
        player.x += player.speed;
      }
      if (keys['Space']) {
        bullets.push({
          x: player.x + player.width / 2 - 5,
          y: player.y,
          width: 10,
          height: 20,
          speed: 7,
        });
        keys['Space'] = false; // Prevent holding space to shoot continuously
      }
    }

    // Game loop
    function gameLoop() {
      if (gameOver) {
        ctx.fillStyle = 'red';
        ctx.font = '40px Arial';
        ctx.fillText('Game Over!', canvas.width / 2 - 100, canvas.height / 2);
        ctx.fillText(`Score: ${score}`, canvas.width / 2 - 80, canvas.height / 2 + 50);
        return;
      }

      ctx.clearRect(0, 0, canvas.width, canvas.height);

      handleInput();
      drawPlayer();
      drawBullets();
      drawEnemies();
      checkCollisions();

      ctx.fillStyle = 'white';
      ctx.font = '20px Arial';
      ctx.fillText(`Score: ${score}`, 10, 20);

      requestAnimationFrame(gameLoop);
    }

    // Spawn enemies every 2 seconds
    setInterval(spawnEnemy, 2000);

    // Key handling
    const keys = {};
    window.addEventListener('keydown', (e) => (keys[e.key] = true));
    window.addEventListener('keyup', (e) => (keys[e.key] = false));

    // Start the game
    gameLoop();
  </script>
</body>
</html>
